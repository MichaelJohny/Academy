@model Academy.Core.Courses.Course
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Id > 0)
{
    <h3 class="pageLabel">Update Course</h3>
}
else
{
    <h3 class="pageLabel">New Course</h3>
}

@using (Html.BeginForm("Save", "Courses"))
{
    @Html.ValidationSummary(false)
    @Html.HiddenFor(m => m.Id)
    <div class="">
        <table class="table table-light">
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseNameId)
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.CourseNameId, new SelectList(ViewBag.CourseNames, "Id", "Name"), "Select Course", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.CourseNameId)            
                            </td>
                        </tr>
                    </table>
                    
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.GroupNumber)
                            </td>
                            <td class="col-md-4">
                                @Html.EditorFor(m => m.GroupNumber, new {htmlAttributes = new {@class = "form-control formcontrolWidth "}})
                                @Html.ValidationMessageFor(m => m.GroupNumber)
                            </td>
                        </tr>
                    </table>
                    
                    
                </td>
            </tr>
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.BatchId)
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.BatchId, new SelectList(ViewBag.Batches, "Id", "BatchNumber"), "Select Batch", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.BatchId)
                            </td>
                        </tr>
                    </table>
                    
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.InstructorId)
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.InstructorId, new SelectList(ViewBag.Instructors, "Id", "FullName"), "Select Instructor", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.InstructorId)            
                            </td>
                        </tr>
                    </table>
                    
                </td>

            </tr>
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseManagerId)            
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.CourseManagerId, new SelectList(ViewBag.Users, "Id", "UserName"), "Select Course Manager", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.CourseManagerId)
                            </td>
                        </tr>
                    </table>
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseDuration)
                            </td>
                            <td class="col-md-4">
                                @Html.TextBoxFor(m => m.CourseDuration, new {@class = "form-control formcontrolWidth", placeholder = "Course Duration"})
                                @Html.ValidationMessageFor(m => m.CourseDuration)
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        <tr>
            <td class="form-inline col-md-6">
                <table>
                    <tr>
                        <td class="col-md-2">
                            @Html.LabelFor(m => m.Day1)
                        </td>
                        <td class="col-md-4">
                            @Html.DropDownList("Day1", new SelectList(ViewBag.days,"Value","Text"), "Select Day", new { @class = "form-control formcontrolWidth" })
                        </td>
                       
                        
                    </tr>
                </table>
            </td>
            <td class="form-inline col-md-6">
                <table>
                    <tr>
                        <td class="col-md-2">
                            @Html.LabelFor(m => m.Day2)
                        </td>
                        <td class="col-md-4">
                            @Html.DropDownList("Day2", new SelectList(ViewBag.days,"Value","Text"), "Select Day", new { @class = "form-control formcontrolWidth" })
                        </td>
                    </tr>
                </table>
            </td>
        </tr>

            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.DateFrom)
                            </td>
                            <td class="col-md-4">
                                @Html.EditorFor(m => m.DateFrom, new {htmlAttributes = new {@class = "form-control formcontrolWidth", @type = "date", @selectedDate = Model.DateFrom}})
                                @Html.ValidationMessageFor(m => m.DateFrom)
                            </td>
                        </tr>
                    </table>
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.DateTo)
                            </td>
                            <td class="col-md-4">
                                @Html.EditorFor(m => m.DateTo, new {htmlAttributes = new {@class = "form-control formcontrolWidth", @type = "date", @selectedDate = Model.DateTo}})
                                @Html.ValidationMessageFor(m => m.DateTo)
                            </td>
                        </tr>
                    </table>
                    
                </td>
            </tr>
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.TimeFrom)
                            </td>
                            <td class="col-md-4">
                                @Html.EditorFor(m => m.TimeFrom, new {htmlAttributes = new {@class = "form-control formcontrolWidth", @type = "time", @selectedDate = Model.TimeFrom}})
                                @Html.ValidationMessageFor(m => m.TimeFrom)
                            </td>
                        </tr>
                    </table>
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.TimeTo)
                            </td>
                            <td class="col-md-4">
                                @Html.EditorFor(m => m.TimeTo, new {htmlAttributes = new {@class = "form-control formcontrolWidth", @type = "time", @selectedDate = Model.TimeTo}})
                                @Html.ValidationMessageFor(m => m.TimeTo)
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseLocationId)

                                
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.CourseLocationId, new SelectList(ViewBag.CourseLocations, "Id", "Name"), "Select Location", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.CourseLocationId)
                            </td>
                        </tr>
                    </table>
                </td>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseLabId)
                            </td>
                            <td class="col-md-4">
                                @Html.DropDownListFor(m => m.CourseLabId, new SelectList(ViewBag.CourseLabs, "Id", "Name"), "Select Lab", new {@class = "form-control formcontrolWidth"})
                                @Html.ValidationMessageFor(m => m.CourseLabId)
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr>
                <td class="form-inline col-md-6">
                    <table>
                        <tr>
                            <td class="col-md-2">
                                @Html.LabelFor(m => m.CourseFees)
                            </td>
                            <td class="col-md-4">
                                @Html.TextBoxFor(m => m.CourseFees, new { @class = "form-control formcontrolWidth", placeholder = "Course Fees" })
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>

    <div class="form-row">
        <div class="col-xs-12 col-md-12 col-lg-12">
            <div id="submitDiv" class="form-group pull-right">
                @Html.ActionLink("New", "New", "Courses", new { @class = "btn btn-default" })
                <button type="submit" id="submitStudent" class="btn btn-primary pull-right">Save</button>
            </div>
        </div>
    </div>
    if (Model.Enrollments.Any())
    {
        <div class="row-form">
            <div class="col-xs-12 col-md-12 col=lg-12">
                <h3>Enrolled students by Selected course</h3>
            </div>
            <div class="col-xs-12 col-md-12 col-lg-12">
                <table class="table table-bordered table-hover">
                    <thead>
                    <tr>
                        <th>Name</th>
                        <th>Code</th>
                        <th>City</th>
                        <th>Mobile</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var enrollment in Model.Enrollments)
                    {
                        <tr>
                            <td>
                                @enrollment.Student.FullName
                            </td>
                            <td>
                                @enrollment.Student.Code
                            </td>
                            <td>
                                @enrollment.Student.City.Name
                            </td>
                            <td>
                                @enrollment.Student.Mobile1
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    }

}

@section scripts{
    <script>
        $(document).ready(function () {
            const selectedCourseLocation = $("#CourseLocationId").val();
            const selectedCourseLab = $("#CourseLabId").val();

            const labSelect = $("#CourseLabId");

            AddLabs(selectedCourseLocation, labSelect, selectedCourseLab);



            const selectedCategory = $("#CategoryId").val();
            const selectedBatch = $("#BatchId").val();

            const batchSelect = $("#BatchId");
            AddBatches(selectedCategory, batchSelect, selectedBatch);

        });

        $("#CourseLocationId").change(function () {
            const selectedCourseLocation = $("#CourseLocationId").val();
            let labSelect = $('#CourseLabId');
            labSelect.empty();
            if (selectedCourseLocation != null && selectedCourseLocation !== '') {
                AddLabs(selectedCourseLocation, labSelect);
            }
        });

        $("#CategoryId").change(function () {
            const selectedCategory = $("#CategoryId").val();
            let batchSelect = $('#BatchId');
            batchSelect.empty();
            if (selectedCategory != null && selectedCategory !== '') {
                AddBatches(selectedCategory, batchSelect);
            }
        });

        function AddLabs(selectedCourseLocation, labSelect, selectedCourseLab) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetCourseLabs", "Courses")',
                dataType: 'json',
                data: { selectedCourseLocation: selectedCourseLocation },
                success: function (labs) {
                    if (labs != null && !jQuery.isEmptyObject(labs)) {
                        labSelect.empty();
                        labSelect.append('<option value= 0> Select Lab </option>');
                        $.each(labs,
                            function (index, lab) {
                                labSelect.append($('<option/>',
                                    {
                                        value: lab.Value,
                                        text: lab.Text
                                    }));
                            });
                        if ($("#CourseLabId").val() != null && $("#CourseLabId").val() !== '') {

                            if (selectedCourseLab == undefined)
                                labSelect.val("0");
                            else {
                                labSelect.val(selectedCourseLab);
                            }

                        }
                    }
                }
            });
        }

        function AddBatches(selectedCategory, batchSelect, selectedBatch) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetBatches","Batches")',
                dataType: 'json',
                data: { selectedCategory: selectedCategory },
                success: function (batches) {
                    if (batches != null && !jQuery.isEmptyObject(batches)) {
                        batchSelect.empty();
                        batchSelect.append('<option value= 0> Select Batch </option>');
                        $.each(batches,
                            function (index, batch) {
                                batchSelect.append($('<option/>',
                                    {
                                        value: batch.Value,
                                        text: batch.Text
                                    }));
                            });
                        if ($("#BatchId").val() != null && $("#BatchId").val() !== '') {

                            if (selectedBatch == undefined)
                                batchSelect.val("0");
                            else {
                                batchSelect.val(selectedBatch);
                            }

                        }
                    }
                }
            });
        }
    </script>
}

