@model Academy.Core.Students.Student
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@if (Model.Id > 0)
{
    <h3 class="pageLabel">Update Student</h3>
}
else
{
    <h3 class="pageLabel">New Student</h3>
}

@using (Html.BeginForm("Save", "Students"))
{
    @Html.ValidationSummary(false)
    @Html.HiddenFor(m => m.Id)

    <div class="form-row">
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-4">

                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
                @Html.ValidationMessageFor(m => m.FirstName)
            </div>
            <div class="col-md-4">
                @* Middkel name *@
                @Html.TextBoxFor(m => m.SecondName, new { @class = "form-control", placeholder = "Middle Name" })
                @Html.ValidationMessageFor(m => m.SecondName)
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
            </div>
        </div>
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Code, new { @class = "form-control", @readonly = "readonly", placeholder = "Code" })
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Mobile1, new { @class = "form-control", placeholder = "Mobile1" })
                @Html.ValidationMessageFor(m => m.Mobile1)
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Mobile2, new { @class = "form-control", placeholder = "Mobile2" })
            </div>
        </div>
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.BirthDate, $"{Model.BirthDate?.ToShortDateString():d}",
                    new { @class = "form-control datepicker", type = "date", @Value = Model.BirthDate?.ToString("yyyy-MM-dd") })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.NationalityId, new SelectList(ViewBag.Nationalities, "Id", "Name"), "Select Nationality", new { @class = "form-control custom-select" })
            </div>

        </div>
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.QualificationId, new SelectList(ViewBag.Qualifications, "Id", "Name"), "Select Qualification", new { @class = "form-control", placeholder = "Qualification" })
            </div>
            <div class="col-md-3">
                @* Ubiversity *@
                @Html.DropDownListFor(m => m.UniversityId, new SelectList(ViewBag.Universities, "Id", "Name"), "Select University", new { @class = "form-control" })

            </div>
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.CollageId, new SelectList(ViewBag.Collages, "Id", "Name"), "Select Collage", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.CollageId)
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.GraduationYear, new { @class = "form-control", placeholder = "Graduation Year" })
            </div>

        </div>
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-4">
                @Html.TextBoxFor(m => m.AddressDescrption, new { @class = "form-control", placeholder = "Address Description" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.CityId, new SelectList(ViewBag.Cities, "Id", "Name"), "Select City", new { @class = "form-control", placeholder = "City" })
                @Html.ValidationMessageFor(m => m.CityId)
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.AreaId, new SelectList(ViewBag.Areas, "Id", "Name"), new { @class = "form-control", placeholder = "Area" })
            </div>


        </div>
        <div class="col-xs-12 col-md-12 col-lg-12 divPadding">
            <div class="col-md-3">
                @Html.DropDownListFor(m => m.SpecializationId, new SelectList(ViewBag.Sepecializations, "Id", "Name"), "Select Specialization", new { @class = "form-control" })
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", placeholder = "Job Title" })
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Experience, new { @class = "form-control", placeholder = "Experiences Year" })
            </div>
            <div class="col-md-3">
                @Html.TextBoxFor(m => m.Employer, new { @class = "form-control", placeholder = "Employer" })
            </div>

        </div>

    </div>

    <div class="form-row">
        <div class="col-xs-12 col-md-12 col-lg-12">
            <div id="submitDiv" class="form-group pull-right">
                @Html.ActionLink("New", "New", "Students", new { @class = "btn btn-default" })
                <button type="submit" id="submitStudent" class="btn btn-primary pull-right">Save</button>
            </div>
        </div>
    </div>

    if (Model.Enrollments != null && Model.Enrollments.Any())
    {
        <div class="row-form">
            <div class="col-xs-12 col-md-12 col=lg-12">
                <h3>Enrolled Courses by Selected Student</h3>
            </div>
            <div class="col-xs-12 col-md-12 col-lg-12">
                <table class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Date From</th>
                            <th>Date To</th>
                            <th>Course Location</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var course in Model.Enrollments)
                    {
                            <tr>
                                <td>
                                    @course.Course.CourseName.Name
                                </td>
                                <td>
                                    @course.Course.DateFrom.ToString("d")
                                </td>
                                <td>
                                    @course.Course.DateTo.ToString("d")
                                </td>
                                <td>
                                    @course.Course.CourseLocation.Name
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}

@section scripts{
    @Scripts.Render("~/bundle/jaueryval")
    <script>

        $(document).ready(function () {
            const selectedCity = $("#CityId").val();
            const selectedArea = $("#AreaId").val();
            let areasSelect = $('#AreaId');
            AddAreas(selectedCity, areasSelect, selectedArea);



        });

        $("#CityId").change(function () {
            const selectedCity = $("#CityId").val();
            let areasSelect = $('#AreaId');
            areasSelect.empty();
            if (selectedCity != null && selectedCity != '') {
                AddAreas(selectedCity, areasSelect);
            }
        });

        function AddAreas(selectedCity, areasSelect, selectedArea) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetAreas", "Applicants")',
                dataType: 'json',
                data: { selectedCity: selectedCity },
                success: function (areas) {
                    if (areas != null && !jQuery.isEmptyObject(areas)) {
                        areasSelect.empty();
                        areasSelect.append('<option value= 0> Select Area </option>');
                        $.each(areas,
                            function (index, area) {
                                areasSelect.append($('<option/>',
                                    {
                                        value: area.Value,
                                        text: area.Text
                                    }));
                            });
                        if ($("#AreaId").val() != null && $("#AreaId").val() != '') {
                            if (selectedArea == undefined)
                                areasSelect.val("0");
                            else {
                                areasSelect.val(selectedArea);
                            }

                        };
                    }
                }
            });
        }

    </script>
}